<?xml version="1.0" encoding="utf-8"?>
<pmd-cpd>
   <duplication lines="29" tokens="251">
      <file line="154"
            path="/var/lib/jenkins/jobs/doxdb/workspace/doxdb-rest/src/main/java/net/trajano/doxdb/ejb/EsJaxRsSearchBean.java"/>
      <file line="203"
            path="/var/lib/jenkins/jobs/doxdb/workspace/doxdb-rest/src/main/java/net/trajano/doxdb/ejb/EsJaxRsSearchBean.java"/>
      <codefragment><![CDATA[        final JsonObject results = jestProvider.getTarget().path(index).path("_search").request(MediaType.APPLICATION_JSON).post(Entity.entity(queryBuilder.build(), MediaType.APPLICATION_JSON)).readEntity(JsonObject.class);

        final JsonArray hits = results.getJsonObject("hits").getJsonArray("hits");
        result.setTotalHits(results.getJsonObject("hits").getInt("total"));
        result.setBottomDoc(Math.min(from + hits.size(), from + limit));
        for (final JsonValue hitValue : hits) {
            final IndexView iv = new IndexView();
            final JsonObject hit = (JsonObject) hitValue;
            iv.setDoxID(new DoxID(hit.getString("_id")));
            iv.setCollection(hit.getString("_type"));

            for (final Entry<String, JsonValue> entry : hit.getJsonObject("_source").entrySet()) {
                if (entry.getValue() instanceof JsonNumber) {
                    iv.setNumber(entry.getKey(), ((JsonNumber) entry.getValue()).bigDecimalValue());
                } else if (entry.getValue() instanceof JsonString) {
                    iv.setString(entry.getKey(), ((JsonString) entry.getValue()).getString());
                }
            }
            result.addHit(iv);
        }

        return result;

    }

    /**
     * {@inheritDoc}
     */
    @Override]]></codefragment>
   </duplication>
   <duplication lines="66" tokens="162">
      <file line="137"
            path="/var/lib/jenkins/jobs/doxdb/workspace/doxdb-rest/src/main/java/net/trajano/doxdb/DoxOobTombstone.java"/>
      <file line="127"
            path="/var/lib/jenkins/jobs/doxdb/workspace/doxdb-rest/src/main/java/net/trajano/doxdb/DoxTombstone.java"/>
      <codefragment><![CDATA[    }

    public String getSchemaName() {

        return schemaName;
    }

    public int getSchemaVersion() {

        return schemaVersion;
    }

    public void setContent(final byte[] content) {

        this.content = content;
    }

    public void setCreatedBy(final String createdBy) {

        this.createdBy = createdBy;
    }

    public void setCreatedOn(final Date createdOn) {

        this.createdOn = createdOn;
    }

    public void setDeletedBy(final String deletedBy) {

        this.deletedBy = deletedBy;
    }

    public void setDeletedOn(final Date deletedOn) {

        this.deletedOn = deletedOn;
    }

    /**
     * Sets the Dox ID value using a {@link DoxID}. This internally converts it
     * to a string as a workaround when JPA converters are not working as
     * expected.
     *
     * @param doxId
     *            Dox ID
     */
    public void setDoxId(final DoxID doxId) {

        this.doxId = doxId.toString();
    }

    public void setId(final long id) {

        this.id = id;
    }

    public void setLastUpdatedBy(final String lastUpdatedBy) {

        this.lastUpdatedBy = lastUpdatedBy;
    }

    public void setLastUpdatedOn(final Date lastUpdatedOn) {

        this.lastUpdatedOn = lastUpdatedOn;
    }

    public void setName(final String name) {]]></codefragment>
   </duplication>
   <duplication lines="30" tokens="123">
      <file line="27"
            path="/var/lib/jenkins/jobs/doxdb/workspace/doxdb-rest/src/main/java/net/trajano/doxdb/DoxOobTombstone.java"/>
      <file line="26"
            path="/var/lib/jenkins/jobs/doxdb/workspace/doxdb-rest/src/main/java/net/trajano/doxdb/DoxTombstone.java"/>
      <codefragment><![CDATA[public class DoxOobTombstone {

    @Lob
    @Basic(fetch = FetchType.LAZY)
    @Column(nullable = false,
        updatable = false,
        length = DoxLength.CONTENT_LENGTH)
    private byte[] content;

    @Column(nullable = false,
        updatable = false,
        length = DoxLength.PRINCIPAL_LENGTH)
    private String createdBy;

    @Column(nullable = false,
        updatable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOn;

    @Column(nullable = false,
        updatable = false,
        length = DoxLength.PRINCIPAL_LENGTH)
    private String deletedBy;

    @Column(nullable = false,
        updatable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date deletedOn;

    @Column(nullable = false,]]></codefragment>
   </duplication>
   <duplication lines="55" tokens="123">
      <file line="80"
            path="/var/lib/jenkins/jobs/doxdb/workspace/doxdb-rest/src/main/java/net/trajano/doxdb/DoxOobTombstone.java"/>
      <file line="75"
            path="/var/lib/jenkins/jobs/doxdb/workspace/doxdb-rest/src/main/java/net/trajano/doxdb/DoxTombstone.java"/>
      <codefragment><![CDATA[    @Column(nullable = false,
        updatable = false,
        length = DoxLength.SCHEMA_NAME_LENGTH)
    private String schemaName;

    @Column(nullable = false,
        updatable = false)
    private int schemaVersion;

    public byte[] getContent() {

        return content;
    }

    public String getCreatedBy() {

        return createdBy;
    }

    public Date getCreatedOn() {

        return createdOn;
    }

    public String getDeletedBy() {

        return deletedBy;
    }

    public Date getDeletedOn() {

        return deletedOn;
    }

    public DoxID getDoxId() {

        return new DoxID(doxId);
    }

    public long getId() {

        return id;
    }

    public String getLastUpdatedBy() {

        return lastUpdatedBy;
    }

    public Date getLastUpdatedOn() {

        return lastUpdatedOn;
    }

    public String getName() {]]></codefragment>
   </duplication>
   <duplication lines="17" tokens="123">
      <file line="138"
            path="/var/lib/jenkins/jobs/doxdb/workspace/doxdb-rest/src/main/java/net/trajano/doxdb/ejb/EsJaxRsSearchBean.java"/>
      <file line="184"
            path="/var/lib/jenkins/jobs/doxdb/workspace/doxdb-rest/src/main/java/net/trajano/doxdb/ejb/EsJaxRsSearchBean.java"/>
      <codefragment><![CDATA[    public SearchResult search(final String index,
        final String queryString,
        final int limit,
        final Integer fromDoc) {

        int from = 0;
        if (fromDoc != null) {
            from = fromDoc;
        }

        final SearchResult result = new SearchResult();

        final JsonObjectBuilder sqsBuilder = Json.createObjectBuilder().add("query", queryString).add("default_operator", "and");
        final JsonObjectBuilder qBuilder = Json.createObjectBuilder().add("simple_query_string", sqsBuilder);
        final JsonObjectBuilder queryBuilder = Json.createObjectBuilder().add("size", limit).add("query", qBuilder).add("from", from);

        final JsonObject results = jestProvider.getTarget().path(index).path("_search").request(MediaType.APPLICATION_JSON).post(Entity.entity(queryBuilder.build(), MediaType.APPLICATION_JSON)).readEntity(JsonObject.class);]]></codefragment>
   </duplication>
</pmd-cpd>